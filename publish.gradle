task sourceJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    archiveClassifier = "sources"
}

task packageJavadoc(type: Jar) {
    from sourceSets.main.java.srcDirs
    archiveClassifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            from components.java
            artifact sourceJar
            artifact packageJavadoc

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = 'network'
                description = 'Library for creating a light http server'
                url = 'https://github.com/Infomaximum/network'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'infomaximum'
                        name = 'Infomaximum LLC'
                        email = 'develop@infomaximum.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/Infomaximum/network.git'
                    developerConnection = 'scm:git:git@github.com:Infomaximum/network.git'
                    url = 'https://github.com/Infomaximum/network'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}