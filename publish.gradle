apply plugin: 'maven'
apply plugin: 'signing'

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

//Задача для сборки jar с исходниками
task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

//Добавляем в артифакты исходники
artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'network'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Library for creating a light http server'
                url 'https://github.com/Infomaximum/network'

                scm {
                    connection 'scm:git:https://github.com/Infomaximum/network.git'
                    developerConnection 'scm:git:git@github.com:Infomaximum/network.git'
                    url 'https://github.com/Infomaximum/network'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'infomaximum'
                        name 'Infomaximum LLC'
                        email 'develop@infomaximum.com'
                    }
                }
            }
        }
    }
}

uploadArchives.dependsOn 'clean'
uploadArchives.dependsOn 'test'